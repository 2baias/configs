--[[
Conky, a system monitor, based on torsmo

Any original torsmo code is licensed under the BSD license

All code written since the fork of torsmo is licensed under the GPL

Please see COPYING for details

Copyright (c) 2004, Hannu Saransaari and Lauri Hakkarainen
Copyright (c) 2005-2019 Brenden Matthews, Philip Kovacs, et. al. (see AUTHORS)
All rights reserved.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
]]

conky.config = {
    alignment = 'top_right',
    background = false,
    border_width = 0,
    cpu_avg_samples = 2,
    default_color = 'orange',
    default_outline_color = 'white',
    default_shade_color = 'white',
    double_buffer = true,
    draw_borders = false,
    draw_graph_borders = true,
    draw_outline = false,
    draw_shades = false,
    extra_newline = false,
    font = 'Cascadia Code:size=9.5',
    gap_x = 20,
    gap_y = 40,
    minimum_height = 5,
    minimum_width = 5,
    net_avg_samples = 2,
    no_buffers = true,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    own_window = true,
    own_window_transparent=true,
    own_window_argb_visual=true,
    own_window_class = 'Conky',
    own_window_title = 'conky',
    own_window_type = 'override',
    show_graph_range = false,
    show_graph_scale = false,
    stippled_borders = 0,
    update_interval = 1,
    uppercase = false,
    use_spacer = 'none',
    use_xft = true,
    lua_load = "/home/zin0vka/.config/conky/scripts/basic2.lua",
    lua_draw_hook_post="main"
}

-- the todo script

local filename  = os.getenv("HOME").."/todo/todo.md"
local file = io.open(filename)
local todo = ""
local complete = {}
local progress = {}
local total = {}
local order = {}

if (file ~= nil) then
    for line in file:lines() do
        if (line:match("^##.*")  ~= nil) then
            todo = string.sub(line, 4, #line)
            complete[todo] = 0
            progress[todo] = 0
            total[todo] = 0
            order[#order + 1 ] = todo
        elseif (line:match("^%[ %].*")  ~= nil) then
            total[todo] = total[todo] + 1
        elseif (line:match("^%[x%].*")  ~= nil) then
            total[todo] = total[todo] + 1
            complete[todo] = complete[todo] + 1
        elseif (line:match("^%[.%].*")  ~= nil) then
            total[todo] = total[todo] + 1
            progress[todo] = progress[todo] + 1
        end
    end
    file:close()
end

local todos =  ""
for _,k in ipairs(order) do
    todos = todos .. string.format("%02d/%02d %s (%d)\n", complete[k], total[k], k, progress[k])
end

local handle = io.popen("grep -oP 'background_opacity \\K[[:digit:]].[[:digit:]]' $HOME/.config/kitty/kitty.conf")
local res = handle:read("*a")
handle:close()
local res_no_newline = string.gsub(res, "\n", "")
local res_paren = "("..res_no_newline..")\n"

conky.text = [[
${alignc}${color lightgrey}$color ${scroll 32 b r u n s t e n}
$hr
${color lightgrey}Kitty keybinds:

Ctrl+Shift+d -- default transparency ]]
.. res_paren ..
[[
Ctrl+Shift+g -- no transparency

Note: active trans. in picom is 1.
$color$hr
${color lightgrey}Uptime:$color $uptime
${color lightgrey}CPU:$color $cpu% ${cpubar 4}
${color lightgrey}RAM:$color $mem/$memmax - $memperc% ${membar 4}
${color lightgrey}Swap:$color $swap/$swapmax - $swapperc% ${swapbar 4}
${color lightgrey}Clock:$color $freq MHz
${color lightgrey}Processes:$color $processes  ${color lightgrey}Running:$color $running_processes
$hr
${color lightgrey}HDD:$color ${fs_used /}/${fs_size /} ${fs_bar 4 /}
${color lightgrey}wlan0: ↓$color ${downspeed wlan0} ${color lightgrey} ↑$color ${upspeed wlan0}
$hr
${color lightgrey}Name              PID   CPU%   MEM%
${color lightgrey} ${top name 1} ${top pid 1} ${top cpu 1} ${top mem 1}
${color lightgrey} ${top name 2} ${top pid 2} ${top cpu 2} ${top mem 2}
${color lightgrey} ${top name 3} ${top pid 3} ${top cpu 3} ${top mem 3}
${color lightgrey} ${top name 4} ${top pid 4} ${top cpu 4} ${top mem 4}
${color lightgrey} ${top name 5} ${top pid 5} ${top cpu 5} ${top mem 5}
${color lightgrey} ${top name 6} ${top pid 6} ${top cpu 6} ${top mem 6}
$color$hr
]]
..
[[



${alignc}${color}t a s k s

${color lightgrey}done/total TASKNAME (active)
$color$hr${color lightgrey}
]] .. todos;

